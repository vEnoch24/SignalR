@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 id="title" class="display-4">Welcome</h1>
    @*<p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>*@
</div>

<div class="container">
    <div id="userinfo" class="row">
        <label class="inp-label" for="username">Please input your user name</label>
        <input type="text" class="form-control" id="username" autocomplete="off" />
        <button type="button" class="btn btn-block" onclick="SetUsername();">Join</button>

    </div>
    <div id="messagearea" class="row" style="display:none;">
        <hr />
        <div class="username-card">
            <div>Joined as: <b><span id="username1">Not Set</span></b></div>
        </div>   
        <hr />
        <div class="col-1">Message</div>
        <div class="col-5"><input type="text" class="w-100" id="messageInput" /></div>
    <div class="row p-1">
        <div class="col-6 text-end">
            <input type="button" id="sendButton" value="Send Message" />
        </div>
    </div>
    </div>
    
    <hr />
    <div class="row p-1">
        <div class="col-6">
            <ul id="messagesList"></ul>
        </div>
    </div>
    <hr />
</div>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

<script>
    "use strict";

    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
    var username = "";
    var input = document.getElementById("messageInput");

    //Disable the send button until connection is established.
    document.getElementById("sendButton").disabled = true;

    connection.on("ReceiveMessage", function (user, message) {
        
        var msg = message.replace(/&,/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        
        if(msg === "")
        {

        }else{
            var encodedMsg = user + " says: " + msg;
            var li = document.createElement("li");
            //li.style.fontWeight = 'bolder';
            li.textContent = encodedMsg;
            document.getElementById("messagesList").appendChild(li);
        }
        
        // We can assign user-supplied strings to an element's textContent because it
        // is not interpreted as markup. If you're assigning in any other way, you 
        // should be aware of possible script injection concerns.
    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {
        //var user = document.getElementById("userInput").value;
        var message = document.getElementById("messageInput").value;
        connection.invoke("SendMessage", username, message).then(function() {
            document.getElementById("messageInput").value = "";
        }).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });

   input.addEventListener("keypress", function (event) {
        if(event.which === 13)
        {
            var message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", username, message).then(function () {
                document.getElementById("messageInput").value = "";
            }).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
        }
    });

    function SetUsername(){
        
        var usernameinput = document.getElementById("username").value;
        if (usernameinput === "")
        {
            alert("please enter your name");
            return;
        }
        else{
            var title = document.getElementById('title');
            title.innerHTML = 'Enchat';
            title.style.color = 'blue';
            title.style.transition = 'all 0.8s ease';
            title.style.fontSize = '100px';
            title.style.marginTop = '2px';
        }
        username = usernameinput;

        document.getElementById("userinfo").style.display = 'none';
        document.getElementById("messagearea").style.display = 'block';
        document.getElementById("username1").innerText = usernameinput;
    }
</script>